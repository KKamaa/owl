// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`t-call dynamic t-call 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__) {
    ctx = Object.create(ctx);
    const b1 = new BText(\` owl \`);
    ctx[zero] = b1;
    const template1 = (ctx['current'].template);
    const b2 = call(template1, ctx, node);
    return b2;
  }
}"
`;

exports[`t-call dynamic t-call 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div>foo</div>\`);
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call dynamic t-call 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new BText(\`bar\`);
    return b1;
  }
}"
`;

exports[`t-call handlers are properly bound through a t-call 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<p>lucas</p>\`);
    handlers = new Array(1);
    build() {
      this.setupHandler(this.el, \`click\`, 0);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    b1.handlers[0] = (e) => ctx.__owl__.component['update'](e);
    return b1;
  }
}"
`;

exports[`t-call handlers are properly bound through a t-call 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_1 = getTemplate(\`__template__6\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/><owl-text/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    data = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
    update() {
      this.anchors[0].nextSibling.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.children[0] = callTemplate_1(ctx, node);
    b1.data[0] = ctx['counter'];
    return b1;
  }
}"
`;

exports[`t-call parent is set within t-call 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new BComponent(\`Child\`, {}, \`__1\`, ctx, node);
    return b1;
  }
}"
`;

exports[`t-call parent is set within t-call 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>lucas</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call parent is set within t-call 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_1 = getTemplate(\`__template__8\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.children[0] = callTemplate_1(ctx, node);
    return b1;
  }
}"
`;

exports[`t-call sub components in two t-calls 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = ctx['props'].val;
    return b1;
  }
}"
`;

exports[`t-call sub components in two t-calls 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_1 = getTemplate(\`sub\`);
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new BMulti(2);
    if (ctx['state'].val===1) {
      b1.children[0] = callTemplate_1(ctx, node);
    } else {
      const b2 = b1.children[1] = new Block1();
      b2.children[0] = callTemplate_2(ctx, node);
    }
    return b1;
  }
}"
`;

exports[`t-call sub components in two t-calls 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new BComponent(\`Child\`, {val: ctx['state'].val}, \`__1\`, ctx, node);
    return b1;
  }
}"
`;
