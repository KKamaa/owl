// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`t-esc div with falsy values 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><p><owl-text/></p><p><owl-text/></p><p><owl-text/></p><p><owl-text/></p><p><owl-text/></p></div>\`);
    data = new Array(5);
    update() {
      const el1 = this.el.firstChild;
      el1.firstChild.textContent = toString(this.data[0]);
      const el2 = el1.nextSibling;
      el2.firstChild.textContent = toString(this.data[1]);
      const el3 = el2.nextSibling;
      el3.firstChild.textContent = toString(this.data[2]);
      const el4 = el3.nextSibling;
      el4.firstChild.textContent = toString(this.data[3]);
      el4.nextSibling.firstChild.textContent = toString(this.data[4]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = ctx['v1'];
    b1.data[1] = ctx['v2'];
    b1.data[2] = ctx['v3'];
    b1.data[3] = ctx['v4'];
    b1.data[4] = ctx['v5'];
    return b1;
  }
}"
`;

exports[`t-esc escaping 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = ctx['var'];
    return b1;
  }
}"
`;

exports[`t-esc escaping on a node 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = 'ok';
    return b1;
  }
}"
`;

exports[`t-esc escaping on a node with a body 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = withDefault('ok', \`nope\`);
    return b1;
  }
}"
`;

exports[`t-esc escaping on a node with a body, as a default 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = withDefault(ctx['var'], \`nope\`);
    return b1;
  }
}"
`;

exports[`t-esc literal 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = 'ok';
    return b1;
  }
}"
`;

exports[`t-esc t-esc is escaped 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-text/></div>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<p>escaped</p>\`);
  }
  
  return function template(ctx, node = ctx.__owl__) {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    const b2 = new Block2();
    ctx[\`var\`] = b2;
    b1.data[0] = ctx['var'];
    return b1;
  }
}"
`;

exports[`t-esc t-esc work with spread operator 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = [...ctx['state'].list];
    return b1;
  }
}"
`;

exports[`t-esc t-esc=0 is escaped 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = this.data[0];
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = ctx[zero];
    return b1;
  }
}"
`;

exports[`t-esc t-esc=0 is escaped 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_1 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<p>escaped</p>\`);
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    ctx = Object.create(ctx);
    const b2 = new Block2();
    ctx[zero] = b2;
    b1.children[0] = callTemplate_1(ctx, node);
    return b1;
  }
}"
`;

exports[`t-esc variable 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    b1.data[0] = ctx['var'];
    return b1;
  }
}"
`;
