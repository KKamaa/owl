// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lifecycle hooks basic checks for a component 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>test</span>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`lifecycle hooks mounted hook is called if mounted in DOM 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div/>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`lifecycle hooks mounted hook is called on subcomponents, in proper order 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div/>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`lifecycle hooks mounted hook is called on subcomponents, in proper order 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    b1.children[0] = new BComponent(\`Child\`, {}, \`__1\`, ctx, parent);
    return b1;
  }
}"
`;

exports[`lifecycle hooks mounted hook is called on subsubcomponents, in proper order 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div/>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`lifecycle hooks mounted hook is called on subsubcomponents, in proper order 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    b1.children[0] = new BComponent(\`ChildChild\`, {}, \`__1\`, ctx, parent);
    return b1;
  }
}"
`;

exports[`lifecycle hooks mounted hook is called on subsubcomponents, in proper order 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    if (ctx['state'].flag) {
      b1.children[0] = new BComponent(\`Child\`, {}, \`__1\`, ctx, parent);
    }
    return b1;
  }
}"
`;

exports[`lifecycle hooks willPatch, patched hook are called on subsubcomponents, in proper order 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-text/></div>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    b1.data[0] = ctx['props'].n;
    return b1;
  }
}"
`;

exports[`lifecycle hooks willPatch, patched hook are called on subsubcomponents, in proper order 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    b1.children[0] = new BComponent(\`ChildChild\`, {n: ctx['props'].n}, \`__1\`, ctx, parent);
    return b1;
  }
}"
`;

exports[`lifecycle hooks willPatch, patched hook are called on subsubcomponents, in proper order 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    b1.children[0] = new BComponent(\`Child\`, {n: ctx['state'].n}, \`__1\`, ctx, parent);
    return b1;
  }
}"
`;

exports[`lifecycle hooks willStart hook is called on sub component 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div/>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`lifecycle hooks willStart hook is called on sub component 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  return (ctx, parent = ctx) => {
    const b1 = new BComponent(\`Child\`, {}, \`__1\`, ctx, parent);
    return b1;
  }
}"
`;

exports[`lifecycle hooks willStart is called 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>simple vnode</span>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`lifecycle hooks willStart is called with component as this 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>simple vnode</span>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`lifecycle hooks willStart, mounted on subwidget rendered after main is mounted in some other position 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div/>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`lifecycle hooks willStart, mounted on subwidget rendered after main is mounted in some other position 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/><owl-anchor/></div>\`);
    children = new Array(2);
    anchors = new Array(2);
    build() {
      this.anchors[0] = this.el.firstChild;
      this.anchors[1] = this.anchors[0].nextSibling;
    }
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<div/>\`);
  }
  
  return (ctx, parent = ctx) => {
    const b1 = new Block1();
    if (ctx['state'].ok) {
      b1.children[0] = new BComponent(\`Child\`, {}, \`__1\`, ctx, parent);
    } else {
      const b2 = b1.children[1] = new Block2();
    }
    return b1;
  }
}"
`;
