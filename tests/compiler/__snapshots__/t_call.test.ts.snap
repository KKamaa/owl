// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`t-call (template calling) basic caller 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>ok</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call (template calling) basic caller 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`_basic-callee\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) basic caller, no parent node 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>ok</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call (template calling) basic caller, no parent node 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`_basic-callee\`);
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) call with several sub nodes on same line 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.children[0] = new BHtml(ctx[zero]);
    return b1;
  }
}"
`;

exports[`t-call (template calling) call with several sub nodes on same line 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<span>hey</span>\`);
  }
  
  class Block3 extends BStatic {
    static el = elem(\`<span>yay</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    ctx = Object.create(ctx);
    const b2 = new BMulti(3);
    const b3 = b2.children[0] = new Block2();
    b2.children[1] = new BText(\` \`);
    const b4 = b2.children[2] = new Block3();
    ctx[zero] = b2;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) cascading t-call t-raw='0' 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><span>cascade 2</span><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild.nextSibling;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.children[0] = new BHtml(ctx[zero]);
    return b1;
  }
}"
`;

exports[`t-call (template calling) cascading t-call t-raw='0' 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`finalTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<span>cascade 1</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    ctx = Object.create(ctx);
    const b2 = new BMulti(2);
    const b3 = b2.children[0] = new Block2();
    b2.children[1] = new BHtml(ctx[zero]);
    ctx[zero] = b2;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) cascading t-call t-raw='0' 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`subSubTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<span>cascade 0</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    ctx = Object.create(ctx);
    const b2 = new BMulti(2);
    const b3 = b2.children[0] = new Block2();
    b2.children[1] = new BHtml(ctx[zero]);
    ctx[zero] = b2;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) cascading t-call t-raw='0' 4`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`subTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<span>hey</span>\`);
  }
  
  class Block3 extends BStatic {
    static el = elem(\`<span>yay</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    ctx = Object.create(ctx);
    const b2 = new BMulti(3);
    const b3 = b2.children[0] = new Block2();
    b2.children[1] = new BText(\` \`);
    const b4 = b2.children[2] = new Block3();
    ctx[zero] = b2;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) cascading t-call t-raw='0', without external divs 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>cascade 2</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BMulti(2);
    const b2 = b1.children[0] = new Block1();
    b1.children[1] = new BHtml(ctx[zero]);
    return b1;
  }
}"
`;

exports[`t-call (template calling) cascading t-call t-raw='0', without external divs 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`finalTemplate\`);
  
  class Block1 extends BStatic {
    static el = elem(\`<span>cascade 1</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new BMulti(2);
    const b2 = b1.children[0] = new Block1();
    b1.children[1] = new BHtml(ctx[zero]);
    ctx[zero] = b1;
    const b3 = callTemplate_2(ctx, node, key + \`__1\`);
    return b3;
  }
}"
`;

exports[`t-call (template calling) cascading t-call t-raw='0', without external divs 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`subSubTemplate\`);
  
  class Block1 extends BStatic {
    static el = elem(\`<span>cascade 0</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new BMulti(2);
    const b2 = b1.children[0] = new Block1();
    b1.children[1] = new BHtml(ctx[zero]);
    ctx[zero] = b1;
    const b3 = callTemplate_2(ctx, node, key + \`__1\`);
    return b3;
  }
}"
`;

exports[`t-call (template calling) cascading t-call t-raw='0', without external divs 4`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`subTemplate\`);
  
  class Block1 extends BStatic {
    static el = elem(\`<span>hey</span>\`);
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<span>yay</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new BMulti(3);
    const b2 = b1.children[0] = new Block1();
    b1.children[1] = new BText(\` \`);
    const b3 = b1.children[2] = new Block2();
    ctx[zero] = b1;
    const b4 = callTemplate_2(ctx, node, key + \`__1\`);
    return b4;
  }
}"
`;

exports[`t-call (template calling) dynamic t-call 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<foo><owl-text/></foo>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['val'];
    return b1;
  }
}"
`;

exports[`t-call (template calling) dynamic t-call 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<bar><owl-text/></bar>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['val'];
    return b1;
  }
}"
`;

exports[`t-call (template calling) dynamic t-call 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    const template2 = (ctx['template']);
    b1.children[0] = call(template2, ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) inherit context 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BText(ctx['foo']);
    return b1;
  }
}"
`;

exports[`t-call (template calling) inherit context 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx[\`foo\`] = 1;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) recursive template, part 1 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`recursive\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><span>hey</span><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild.nextSibling;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    if (false) {
      b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    }
    return b1;
  }
}"
`;

exports[`t-call (template calling) recursive template, part 2 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`nodeTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx = Object.create(ctx);
    ctx[\`node\`] = ctx['root'];
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) recursive template, part 2 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_3 = getTemplate(\`nodeTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><p><owl-text/></p><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    data = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild.nextSibling;
    }
    update() {
      this.el.firstChild.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    b1.data[0] = ctx['node'].val;
    const b2 = b1.children[0] = new BCollection(ctx['node'].children||[], false, false);
    ctx = Object.create(ctx);
    const k1 = b2.values, v1 = b2.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`subtree\`] = v1[i1];
      ctx[\`subtree_first\`] = i1 === 0;
      ctx[\`subtree_last\`] = i1 === v1.length - 1;
      ctx[\`subtree_index\`] = i1;
      ctx[\`subtree_value\`] = k1[i1];
      let key1 = ctx['subtree_index'];
      ctx = Object.create(ctx);
      ctx[\`node\`] = ctx['subtree'];
      b2.children[i1] = callTemplate_3(ctx, node, key + \`__2__\${key1}\`);
      ctx = ctx.__proto__;
      b2.keys[i1] = key1;
    }
    return b1;
  }
}"
`;

exports[`t-call (template calling) recursive template, part 3 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`nodeTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx = Object.create(ctx);
    ctx[\`node\`] = ctx['root'];
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) recursive template, part 3 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_3 = getTemplate(\`nodeTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><p><owl-text/></p><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    data = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild.nextSibling;
    }
    update() {
      this.el.firstChild.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    b1.data[0] = ctx['node'].val;
    const b2 = b1.children[0] = new BCollection(ctx['node'].children||[], false, false);
    ctx = Object.create(ctx);
    const k1 = b2.values, v1 = b2.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`subtree\`] = v1[i1];
      ctx[\`subtree_first\`] = i1 === 0;
      ctx[\`subtree_last\`] = i1 === v1.length - 1;
      ctx[\`subtree_index\`] = i1;
      ctx[\`subtree_value\`] = k1[i1];
      let key1 = ctx['subtree_index'];
      ctx = Object.create(ctx);
      ctx[\`node\`] = ctx['subtree'];
      b2.children[i1] = callTemplate_3(ctx, node, key + \`__2__\${key1}\`);
      ctx = ctx.__proto__;
      b2.keys[i1] = key1;
    }
    return b1;
  }
}"
`;

exports[`t-call (template calling) recursive template, part 4: with t-set recursive index 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`nodeTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx = Object.create(ctx);
    ctx[\`recursive_idx\`] = 1;
    ctx[\`node\`] = ctx['root'];
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) recursive template, part 4: with t-set recursive index 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_3 = getTemplate(\`nodeTemplate\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><p><owl-text/> <owl-text/></p><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    data = new Array(2);
    build() {
      this.anchors[0] = this.el.firstChild.nextSibling;
    }
    update() {
      const el1 = this.el.firstChild.firstChild;
      el1.textContent = toString(this.data[0]);
      el1.nextSibling.nextSibling.textContent = toString(this.data[1]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx[\`recursive_idx\`] = ctx['recursive_idx']+1;
    b1.data[0] = ctx['node'].val;
    b1.data[1] = ctx['recursive_idx'];
    const b2 = b1.children[0] = new BCollection(ctx['node'].children||[], false, false);
    ctx = Object.create(ctx);
    const k1 = b2.values, v1 = b2.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`subtree\`] = v1[i1];
      ctx[\`subtree_first\`] = i1 === 0;
      ctx[\`subtree_last\`] = i1 === v1.length - 1;
      ctx[\`subtree_index\`] = i1;
      ctx[\`subtree_value\`] = k1[i1];
      let key1 = ctx['subtree_index'];
      ctx = Object.create(ctx);
      ctx[\`node\`] = ctx['subtree'];
      b2.children[i1] = callTemplate_3(ctx, node, key + \`__2__\${key1}\`);
      ctx = ctx.__proto__;
      b2.keys[i1] = key1;
    }
    return b1;
  }
}"
`;

exports[`t-call (template calling) scoped parameters 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BText(\`ok\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) scoped parameters 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/><owl-text/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    data = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
    update() {
      this.anchors[0].nextSibling.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx = Object.create(ctx);
    ctx[\`foo\`] = 42;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    ctx = ctx.__proto__;
    b1.data[0] = ctx['foo'];
    return b1;
  }
}"
`;

exports[`t-call (template calling) scoped parameters, part 2 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BText(ctx['foo']);
    return b1;
  }
}"
`;

exports[`t-call (template calling) scoped parameters, part 2 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/><owl-text/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    data = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
    update() {
      this.anchors[0].nextSibling.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx[\`foo\`] = 11;
    ctx = Object.create(ctx);
    ctx[\`foo\`] = 42;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    ctx = ctx.__proto__;
    b1.data[0] = ctx['foo'];
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call allowed on a non t node 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call allowed on a non t node 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>ok</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with body content as root of a template 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<foo><owl-anchor/></foo>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.children[0] = new BHtml(ctx[zero]);
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with body content as root of a template 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`antony\`);
  
  class Block1 extends BStatic {
    static el = elem(\`<p>antony</p>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx[zero] = b1;
    const b2 = callTemplate_2(ctx, node, key + \`__1\`);
    return b2;
  }
}"
`;

exports[`t-call (template calling) t-call with t-if 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    if (ctx['flag']) {
      b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    }
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with t-if 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>ok</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with t-set inside and body text content 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx = Object.create(ctx);
    ctx[\`val\`] = \`yip yip\`;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with t-set inside and body text content 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<p><owl-text/></p>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['val'];
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with t-set inside and outside 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_3 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    const b2 = b1.children[0] = new BCollection(ctx['list'], true, false);
    ctx = Object.create(ctx);
    const k1 = b2.values, v1 = b2.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`v\`] = v1[i1];
      ctx[\`v_first\`] = i1 === 0;
      ctx[\`v_last\`] = i1 === v1.length - 1;
      ctx[\`v_index\`] = i1;
      ctx[\`v_value\`] = k1[i1];
      let key1 = ctx['v_index'];
      ctx[\`val\`] = ctx['v'].val;
      ctx = Object.create(ctx);
      ctx[\`val3\`] = ctx['val']*3;
      b2.children[i1] = callTemplate_3(ctx, node, key + \`__2__\${key1}\`);
      ctx = ctx.__proto__;
      b2.keys[i1] = key1;
    }
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with t-set inside and outside 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['val3'];
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with t-set inside and outside. 2 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_3 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    const b2 = b1.children[0] = new BCollection(ctx['list'], true, false);
    ctx = Object.create(ctx);
    const k1 = b2.values, v1 = b2.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`v\`] = v1[i1];
      ctx[\`v_first\`] = i1 === 0;
      ctx[\`v_last\`] = i1 === v1.length - 1;
      ctx[\`v_index\`] = i1;
      ctx[\`v_value\`] = k1[i1];
      let key1 = ctx['v_index'];
      ctx[\`val\`] = ctx['v'].val;
      ctx = Object.create(ctx);
      ctx[\`val3\`] = ctx['val']*3;
      b2.children[i1] = callTemplate_3(ctx, node, key + \`__2__\${key1}\`);
      ctx = ctx.__proto__;
      b2.keys[i1] = key1;
    }
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with t-set inside and outside. 2 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BMulti(2);
    const b2 = b1.children[0] = new Block1();
    b2.data[0] = ctx['val3'];
    b1.children[1] = new BText(ctx['w']);
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call with t-set inside and outside. 2 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`main\`);
  
  class Block1 extends BNode {
    static el = elem(\`<p><owl-anchor/></p>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx[\`w\`] = 'fromwrapper';
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call, conditional and t-set in t-call body 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div>callee1</div>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call, conditional and t-set in t-call body 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div>callee2 <owl-text/></div>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.nextSibling.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['v'];
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-call, conditional and t-set in t-call body 3`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`callee1\`);
  const callTemplate_4 = getTemplate(\`callee2\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/><owl-anchor/></div>\`);
    children = new Array(2);
    anchors = new Array(2);
    build() {
      this.anchors[0] = this.el.firstChild;
      this.anchors[1] = this.anchors[0].nextSibling;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx[\`v1\`] = 'elif';
    if (ctx['v1']==='if') {
      b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    } else if (ctx['v1']==='elif') {
      ctx = Object.create(ctx);
      ctx[\`v\`] = 'success';
      b1.children[1] = callTemplate_4(ctx, node, key + \`__3\`);
      ctx = ctx.__proto__;
    }
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-esc inside t-call, with t-set outside 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx[\`v\`] = \`Hi\`;
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) t-esc inside t-call, with t-set outside 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['v'];
    return b1;
  }
}"
`;

exports[`t-call (template calling) with unused body 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div>ok</div>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call (template calling) with unused body 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new BText(\`WHEEE\`);
    ctx[zero] = b1;
    const b2 = callTemplate_2(ctx, node, key + \`__1\`);
    return b2;
  }
}"
`;

exports[`t-call (template calling) with unused setbody 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div>ok</div>\`);
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`t-call (template calling) with unused setbody 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    ctx = Object.create(ctx);
    ctx[\`qux\`] = 3;
    const b1 = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;

exports[`t-call (template calling) with used body 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<h1><owl-text/></h1>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = this.data[0];
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx[zero];
    return b1;
  }
}"
`;

exports[`t-call (template calling) with used body 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new BText(\`ok\`);
    ctx[zero] = b1;
    const b2 = callTemplate_2(ctx, node, key + \`__1\`);
    return b2;
  }
}"
`;

exports[`t-call (template calling) with used setbody 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BText(ctx['foo']);
    return b1;
  }
}"
`;

exports[`t-call (template calling) with used setbody 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  const callTemplate_2 = getTemplate(\`sub\`);
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-anchor/></span>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx = Object.create(ctx);
    ctx[\`foo\`] = 'ok';
    b1.children[0] = callTemplate_2(ctx, node, key + \`__1\`);
    return b1;
  }
}"
`;
