// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`comments only a comment 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<!-- comment-->\`);
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`comments properly handle comments 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BStatic {
    static el = elem(\`<div>hello <!-- comment-->owl</div>\`);
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`comments properly handle comments between t-if/t-else 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/><owl-anchor/></div>\`);
    children = new Array(2);
    anchors = new Array(2);
    build() {
      this.anchors[0] = this.el.firstChild;
      this.anchors[1] = this.anchors[0].nextSibling;
    }
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<span>true</span>\`);
  }
  
  class Block3 extends BStatic {
    static el = elem(\`<span>owl</span>\`);
  }
  
  return function template(ctx, node = ctx.__owl__) {
    const b1 = new Block1();
    if (true) {
      const b2 = b1.children[0] = new Block2();
    } else {
      const b3 = b1.children[1] = new Block3();
    }
    return b1;
  }
}"
`;
