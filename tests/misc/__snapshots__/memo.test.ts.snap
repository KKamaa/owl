// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Memo if no prop change, prevent renderings from above  1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = utils;
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BText(ctx['props'].value);
    return b1;
  }
}"
`;

exports[`Memo if no prop change, prevent renderings from above  2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = utils;
  
  const slot2 = ctx => (node, key) => {
    const b2 = new BMulti(3);
    b2.children[0] = new BText(ctx['state'].a);
    b2.children[1] = new BText(ctx['state'].b);
    b2.children[2] = new BText(ctx['state'].c);
    return b2;
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BMulti(4);
    b1.children[0] = new BText(ctx['state'].a);
    b1.children[1] = new BText(ctx['state'].b);
    b1.children[2] = new BText(ctx['state'].c);
    const b3 = b1.children[3] = new BComponent(\`Memo\`, {a: ctx['state'].a,b: ctx['state'].b}, key + \`__1\`, ctx, node);
    b3.node.slots = {'default': slot2(ctx)};
    return b1;
  }
}"
`;

exports[`Memo if no props, prevent renderings from above  1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = utils;
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BText(ctx['props'].value);
    return b1;
  }
}"
`;

exports[`Memo if no props, prevent renderings from above  2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = utils;
  
  const slot3 = ctx => (node, key) => {
    const b2 = new BComponent(\`Child\`, {value: ctx['state'].value}, key + \`__4\`, ctx, node);
    return b2;
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BMulti(2);
    b1.children[0] = new BComponent(\`Child\`, {value: ctx['state'].value}, key + \`__1\`, ctx, node);
    const b3 = b1.children[1] = new BComponent(\`Memo\`, {}, key + \`__2\`, ctx, node);
    b3.node.slots = {'default': slot3(ctx)};
    return b1;
  }
}"
`;

exports[`Memo if no props, prevent renderings from above (work with simple html)  1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = utils;
  
  const slot2 = ctx => (node, key) => {
    const b2 = new BText(ctx['state'].value);
    return b2;
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BMulti(2);
    b1.children[0] = new BText(ctx['state'].value);
    const b3 = b1.children[1] = new BComponent(\`Memo\`, {}, key + \`__1\`, ctx, node);
    b3.node.slots = {'default': slot2(ctx)};
    return b1;
  }
}"
`;
