// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basics can mount a component with just some text 1`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new BText(\`just text\`);
    return b1;
  }
}"
`;

exports[`basics can mount a component with no text 1`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new BText(\`\`);
    return b1;
  }
}"
`;

exports[`basics can mount a simple component 1`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  class Block1 extends BStatic {
    static el = elem(\`<span>simple vnode</span>\`);
  }
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`basics can mount a simple component with multiple roots 1`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  class Block1 extends BStatic {
    static el = elem(\`<span/>\`);
  }
  
  class Block2 extends BStatic {
    static el = elem(\`<div/>\`);
  }
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new BMulti(2);
    const b2 = b1.children[0] = new Block1();
    const b3 = b1.children[1] = new Block2();
    return b1;
  }
}"
`;
