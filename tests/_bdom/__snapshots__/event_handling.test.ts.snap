// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`simple event handling  1`] = `
"function anonymous(template, mountBefore, patch, remove, updateClass
) {
  return class Builder {
    constructor(data) {
      this.el = template.cloneNode(true);
      let ref0 = this.el;
      this.refs = [ref0];
      this.data = [];
      const handler = this.handleEvent;
      ref0.addEventListener(\\"click\\", handler.bind(this, 0));
      this.update(data);
    }
    update(data) {
      const currentData = this.data;
      const nextData = data.data;
      this.data = nextData;
    }
    handleEvent(n) {
      const handler = this.data[n];
      if (typeof handler === \\"function\\") {
        handler();
      } else {
        const [owner, method] = handler;
        owner[method]();
      }
    }
  }
}"
`;

exports[`simple event handling, with function 1`] = `
"function anonymous(template, mountBefore, patch, remove, updateClass
) {
  return class Builder {
    constructor(data) {
      this.el = template.cloneNode(true);
      let ref0 = this.el;
      this.refs = [ref0];
      this.data = [];
      const handler = this.handleEvent;
      ref0.addEventListener(\\"click\\", handler.bind(this, 0));
      this.update(data);
    }
    update(data) {
      const currentData = this.data;
      const nextData = data.data;
      this.data = nextData;
    }
    handleEvent(n) {
      const handler = this.data[n];
      if (typeof handler === \\"function\\") {
        handler();
      } else {
        const [owner, method] = handler;
        owner[method]();
      }
    }
  }
}"
`;
