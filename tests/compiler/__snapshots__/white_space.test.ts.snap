// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`white space handling consecutives whitespaces are condensed into a single space 1`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  class Block1 extends BStatic {
    static el = elem(\`<div> abc </div>\`);
  }
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`white space handling nothing is done in pre tags 1`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  class Block1 extends BStatic {
    static el = elem(\`<pre>   </pre>\`);
  }
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`white space handling nothing is done in pre tags 2`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  class Block1 extends BStatic {
    static el = elem(\`<pre>
          some text
        </pre>\`);
  }
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`white space handling nothing is done in pre tags 3`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  class Block1 extends BStatic {
    static el = elem(\`<pre>
          
        </pre>\`);
  }
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`white space handling white space only text nodes are condensed into a single space 1`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  class Block1 extends BStatic {
    static el = elem(\`<div> </div>\`);
  }
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;

exports[`white space handling whitespace only text nodes with newlines are removed 1`] = `
"function anonymous(Blocks, helpers
) {
  let {BElem, BText, BNode, BCollection, BHtml, BMulti, BStatic, BDispatch} = Blocks;
  let {elem, setText, withDefault, call, getTemplate, zero, callSlot, capture, toClassObj} = helpers;
  
  class Block1 extends BStatic {
    static el = elem(\`<div><span>abc</span></div>\`);
  }
  
  return function template(ctx, node, key = \\"\\") {
    const b1 = new Block1();
    return b1;
  }
}"
`;
