// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`list of components components in a node in a t-foreach  1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-text/></div>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['props'].item;
    return b1;
  }
}"
`;

exports[`list of components components in a node in a t-foreach  2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><ul><owl-anchor/></ul></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild.firstChild;
    }
  }
  
  class Block2 extends BNode {
    static el = elem(\`<li><owl-anchor/></li>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    const b2 = b1.children[0] = new BCollection(ctx['items'], true, false);
    ctx = Object.create(ctx);
    const k1 = b2.values, v1 = b2.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`item\`] = v1[i1];
      ctx[\`item_first\`] = i1 === 0;
      ctx[\`item_last\`] = i1 === v1.length - 1;
      ctx[\`item_index\`] = i1;
      ctx[\`item_value\`] = k1[i1];
      let key1 = i1;
      key1 = 'li_'+ctx['item'];
      const b3 = b2.children[i1] = new Block2();
      b3.children[0] = new BComponent(\`Child\`, {item: ctx['item']}, key + \`__2__\${key1}\`, ctx, node);
      b2.keys[i1] = key1;
    }
    return b1;
  }
}"
`;

exports[`list of components reconciliation alg works for t-foreach in t-foreach 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-text/></div>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['props'].blip;
    return b1;
  }
}"
`;

exports[`list of components reconciliation alg works for t-foreach in t-foreach 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    const b2 = b1.children[0] = new BCollection(ctx['state'].s, true, false);
    ctx = Object.create(ctx);
    const k1 = b2.values, v1 = b2.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`section\`] = v1[i1];
      ctx[\`section_first\`] = i1 === 0;
      ctx[\`section_last\`] = i1 === v1.length - 1;
      ctx[\`section_index\`] = i1;
      ctx[\`section_value\`] = k1[i1];
      let key1 = ctx['section_index'];
      const b3 = b2.children[i1] = new BCollection(ctx['section'].blips, false, false);
      ctx = Object.create(ctx);
      const k2 = b3.values, v2 = b3.collection, l2 = k2.length;
      for (let i2 = 0; i2 < l2; i2++) {
        ctx[\`blip\`] = v2[i2];
        ctx[\`blip_first\`] = i2 === 0;
        ctx[\`blip_last\`] = i2 === v2.length - 1;
        ctx[\`blip_index\`] = i2;
        ctx[\`blip_value\`] = k2[i2];
        let key2 = ctx['blip_index'];
        b3.children[i2] = new BComponent(\`Child\`, {blip: ctx['blip']}, key + \`__3__\${key1}__\${key2}\`, ctx, node);
        b3.keys[i2] = key2;
      }
      ctx = ctx.__proto__;
      b2.keys[i1] = key1;
    }
    return b1;
  }
}"
`;

exports[`list of components reconciliation alg works for t-foreach in t-foreach, 2 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-text/></div>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['props'].row+'_'+ctx['props'].col;
    return b1;
  }
}"
`;

exports[`list of components reconciliation alg works for t-foreach in t-foreach, 2 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  class Block2 extends BNode {
    static el = elem(\`<p><owl-anchor/></p>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  class Block3 extends BNode {
    static el = elem(\`<p><owl-anchor/></p>\`);
    children = new Array(1);
    anchors = new Array(1);
    build() {
      this.anchors[0] = this.el.firstChild;
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    const b2 = b1.children[0] = new BCollection(ctx['state'].rows, true, false);
    ctx = Object.create(ctx);
    const k1 = b2.values, v1 = b2.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`row\`] = v1[i1];
      ctx[\`row_first\`] = i1 === 0;
      ctx[\`row_last\`] = i1 === v1.length - 1;
      ctx[\`row_index\`] = i1;
      ctx[\`row_value\`] = k1[i1];
      let key1 = ctx['row'];
      const b3 = b2.children[i1] = new Block2();
      const b4 = b3.children[0] = new BCollection(ctx['state'].cols, true, false);
      ctx = Object.create(ctx);
      const k2 = b4.values, v2 = b4.collection, l2 = k2.length;
      for (let i2 = 0; i2 < l2; i2++) {
        ctx[\`col\`] = v2[i2];
        ctx[\`col_first\`] = i2 === 0;
        ctx[\`col_last\`] = i2 === v2.length - 1;
        ctx[\`col_index\`] = i2;
        ctx[\`col_value\`] = k2[i2];
        let key2 = ctx['col'];
        const b5 = b4.children[i2] = new Block3();
        b5.children[0] = new BComponent(\`Child\`, {row: ctx['row'],col: ctx['col']}, key + \`__3__\${key1}__\${key2}\`, ctx, node);
        b4.keys[i2] = key2;
      }
      ctx = ctx.__proto__;
      b2.keys[i1] = key1;
    }
    return b1;
  }
}"
`;

exports[`list of components simple list 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<span><owl-text/></span>\`);
    data = new Array(1);
    update() {
      this.el.firstChild.textContent = toString(this.data[0]);
    }
  }
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new Block1();
    b1.data[0] = ctx['props'].value;
    return b1;
  }
}"
`;

exports[`list of components simple list 2`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BStatic, BText, BDispatch} = Blocks;
  let {elem, toString, withDefault, call, getTemplate, zero, callSlot, capture} = utils;
  
  return function template(ctx, node = ctx.__owl__, key = \\"\\") {
    const b1 = new BCollection(ctx['state'].elems, false, false);
    ctx = Object.create(ctx);
    const k1 = b1.values, v1 = b1.collection, l1 = k1.length;
    for (let i1 = 0; i1 < l1; i1++) {
      ctx[\`elem\`] = v1[i1];
      ctx[\`elem_first\`] = i1 === 0;
      ctx[\`elem_last\`] = i1 === v1.length - 1;
      ctx[\`elem_index\`] = i1;
      ctx[\`elem_value\`] = k1[i1];
      let key1 = ctx['elem'].id;
      b1.children[i1] = new BComponent(\`Child\`, {value: ctx['elem'].value}, key + \`__2__\${key1}\`, ctx, node);
      b1.keys[i1] = key1;
    }
    return b1;
  }
}"
`;
